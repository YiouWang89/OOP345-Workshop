In this Workshop 4, I learn about the aggregation and composition relationship, and I also learn how to use the class which manages the dynamically allocated array of pointers to the object.
The difference between the implementations of composition and aggregation is that composition is a strong relationship, the composer object owns the component object, it has completely contained another class and determines its lifetime. An aggregation is a weaker relationship, the aggregator has an instance of another class, which determines its own lifetime. For composition, when you create an array, you will build the elements in it and have full access to create and destroy its own elements. For aggregation, it can hold the elements, but the elements can decide to create or destroy themselves. The difference between the implementations of move and copy functions in composition and aggregation is that composition relationship can change the entity but aggregation relationship only change the address of the entity.